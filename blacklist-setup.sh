#!/bin/bash
# ==========================================
# INSTALLATION BLACKLISTS IP AUTOMATIQUES
# ==========================================

echo "üî• Installation des blacklists IP automatiques..."

# 1. Installation des d√©pendances
sudo apt update
sudo apt install -y ipset iptables-persistent curl wget

# 2. Cr√©er le dossier de configuration
sudo mkdir -p /etc/blacklists

# 3. Script de mise √† jour des blacklists
sudo tee /usr/local/bin/update-blacklists.sh << 'EOF'
#!/bin/bash

BLACKLIST_DIR="/etc/blacklists"
LOG_FILE="/var/log/blacklist-update.log"

echo "$(date): Mise √† jour des blacklists" >> $LOG_FILE

# Fonction pour t√©l√©charger et appliquer une blacklist
update_blacklist() {
    local name=$1
    local url=$2
    local temp_file="/tmp/$name.tmp"
    
    echo "T√©l√©chargement de $name..." >> $LOG_FILE
    
    if curl -s "$url" | grep -E '^[0-9]+\.' > "$temp_file"; then
        if [ -s "$temp_file" ]; then
            # Cr√©er l'ipset si il n'existe pas
            if ! ipset list $name >/dev/null 2>&1; then
                ipset create $name hash:net
            fi
            
            # Vider l'ancien set
            ipset flush $name
            
            # Ajouter les nouvelles IPs
            while read ip; do
                ipset add $name $ip 2>/dev/null
            done < "$temp_file"
            
            # Appliquer la r√®gle iptables si elle n'existe pas
            if ! iptables -C INPUT -m set --match-set $name src -j DROP 2>/dev/null; then
                iptables -I INPUT -m set --match-set $name src -j DROP
            fi
            
            echo "$name: $(wc -l < $temp_file) IPs ajout√©es" >> $LOG_FILE
            mv "$temp_file" "$BLACKLIST_DIR/$name.list"
        else
            echo "Erreur: $name liste vide" >> $LOG_FILE
        fi
    else
        echo "Erreur: impossible de t√©l√©charger $name" >> $LOG_FILE
    fi
    
    rm -f "$temp_file"
}

# Spamhaus DROP (r√©seaux compromis)
update_blacklist "spamhaus_drop" "https://www.spamhaus.org/drop/drop.txt"

# DShield (IPs malveillantes)  
update_blacklist "dshield" "https://feeds.dshield.org/block.txt"

# Blocklist.de (attaques SSH/web)
update_blacklist "blocklist_de" "https://lists.blocklist.de/lists/all.txt"

# GreenSnow (scanners)
update_blacklist "greensnow" "https://blocklist.greensnow.co/greensnow.txt"

# Sauvegarder les r√®gles iptables
if command -v netfilter-persistent >/dev/null; then
    netfilter-persistent save
elif command -v iptables-save >/dev/null; then
    iptables-save > /etc/iptables/rules.v4
fi

echo "$(date): Mise √† jour termin√©e" >> $LOG_FILE
echo "Total IPs bloqu√©es: $(iptables -L INPUT -v -n | grep 'match-set' | awk '{sum+=$1} END {print sum}')" >> $LOG_FILE
EOF

chmod +x /usr/local/bin/update-blacklists.sh

# 4. Premier t√©l√©chargement et application
echo "üì• T√©l√©chargement initial des blacklists..."
sudo /usr/local/bin/update-blacklists.sh

# 5. T√¢che cron pour mise √† jour automatique (toutes les 6h)
echo "‚è∞ Configuration de la mise √† jour automatique..."
(crontab -l 2>/dev/null; echo "0 */6 * * * /usr/local/bin/update-blacklists.sh") | crontab -

# 6. Script de v√©rification
sudo tee /usr/local/bin/blacklist-stats.sh << 'EOF'
#!/bin/bash

echo "üìä Statistiques des blacklists:"
echo "================================"

for set in spamhaus_drop dshield blocklist_de greensnow; do
    if ipset list $set >/dev/null 2>&1; then
        count=$(ipset list $set | grep -c '^[0-9]')
        echo "$set: $count IPs bloqu√©es"
    fi
done

echo ""
echo "üî• R√®gles iptables actives:"
iptables -L INPUT -v -n | grep 'match-set'

echo ""
echo "üìà Paquets bloqu√©s aujourd'hui:"
iptables -L INPUT -v -n | grep 'match-set' | awk '{sum+=$1} END {print sum " paquets"}'
EOF

chmod +x /usr/local/bin/blacklist-stats.sh

# 7. Script pour v√©rifier une IP
sudo tee /usr/local/bin/check-ip.sh << 'EOF'
#!/bin/bash

if [ $# -eq 0 ]; then
    echo "Usage: $0 <IP>"
    exit 1
fi

IP=$1
echo "üîç V√©rification de l'IP: $IP"
echo "================================"

for set in spamhaus_drop dshield blocklist_de greensnow; do
    if ipset list $set >/dev/null 2>&1; then
        if ipset test $set $IP 2>/dev/null; then
            echo "‚ùå $IP trouv√©e dans $set"
        else
            echo "‚úÖ $IP pas dans $set"
        fi
    fi
done
EOF

chmod +x /usr/local/bin/check-ip.sh

echo ""
echo "‚úÖ Installation termin√©e !"
echo ""
echo "üìã Commandes utiles:"
echo "- Voir les stats: sudo /usr/local/bin/blacklist-stats.sh"
echo "- V√©rifier une IP: sudo /usr/local/bin/check-ip.sh 1.2.3.4"
echo "- Voir les logs: sudo tail -f /var/log/blacklist-update.log"
echo "- Mise √† jour manuelle: sudo /usr/local/bin/update-blacklists.sh"
echo ""
echo "üîÑ Les listes se mettent √† jour automatiquement toutes les 6h"

# Afficher les premi√®res stats
echo ""
sudo /usr/local/bin/blacklist-stats.sh
